# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/configuration/app.html

# The name of this app. Must be unique within a project.
name: 'app'

# The runtime the application uses.
type: 'php:7.4'

dependencies:
  php:
    composer/composer: '^2'

runtime:
  # Enable the redis extension so Drupal can communicate with the Redis cache.
  extensions:
    - redis

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
  database: 'db:mysql'
  redis: 'cache:redis'

# The size of the persistent disk of the application (in MB).
disk: 2048

# The 'mounts' describe writable, persistent filesystem mounts in the application.
mounts:
  # The default Drupal files directory.
  '/web/sites/default/files':
    source: local
    source_path: 'files'
  # Drupal gets its own dedicated tmp directory. The settings.platformsh.php
  # file will automatically configure Drupal to use this directory.
  '/tmp':
    source: local
    source_path: 'tmp'
  # Private file uploads are stored outside the web root. The settings.platformsh.php
  # file will automatically configure Drupal to use this directory.
  '/web/sites/default/private':
    source: local
    source_path: 'private'
  # Drush needs a scratch space for its own caches.
  '/.drush':
    source: local
    source_path: 'drush'
  # Drush will try to save backups to this directory, so it must be
  # writeable even though you will almost never need to use it.
  '/drush-backups':
    source: local
    source_path: 'drush-backups'
  # Drupal Console will try to save backups to this directory, so it must be
  # writeable even though you will almost never need to use it.
  '/.console':
    source: local
    source_path: 'console'

variables:
  env:
    # Update these for your desired NVM and Node versions.
    NVM_VERSION: v0.37.2
    NODE_VERSION: v10.24.0

# Configuration of the build of this application.
build:
  # Don't automatically run standard `composer install` on every build.
  flavor: none

# The hooks executed at various points in the lifecycle of the application.
hooks:
  # The build hook runs after Composer to finish preparing up your code.
  # No services are available but the disk is writeable.
  build: |
    set -e
    unset NPM_CONFIG_PREFIX
    export NVM_DIR="$PLATFORM_APP_DIR/.nvm"
    # install.sh will automatically install NodeJS based on the presence of $NODE_VERSION
    curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    mkdir -p ${PLATFORM_APP_DIR}/web/sites/default/files
    mkdir -p ${PLATFORM_APP_DIR}/web/sites/default/files/translations
    mkdir -p ${PLATFORM_APP_DIR}/web/sites/default/private
    if [ "$PLATFORM_BRANCH" == "master" ]; then
      composer install --no-interaction --no-progress --optimize-autoloader --no-dev
    else
      composer install --no-interaction --no-progress --optimize-autoloader
    fi
    cd ${PLATFORM_APP_DIR}/web/themes/drupal_nl && ./build.sh && rm -rf node_modules
  # The deploy hook runs after your application has been deployed and started.
  # Code cannot be modified at this point but the database is available.
  # The site is not accepting requests while this script runs so keep it
  # fast.
  deploy: |
    set -e
    php ./drush/platformsh_generate_drush_yml.php
    cd ${PLATFORM_APP_DIR}/web
    drush cache-rebuild
    drush updatedb -y
    drush cache-rebuild
    drush config-import -y
    drush cache-rebuild
    if [ "$PLATFORM_BRANCH" != master ]; then
      drush sfp-en
      drush cache-rebuild
    fi

# The configuration of app when it is exposed to the web.
web:
  locations:
    # All requests not otherwise specified follow these rules.
    '/':
      # The folder from which to serve static assets, for this location.
      #
      # This is a filesystem path, relative to the application root.
      root: 'web'

      # How long to allow static assets from this location to be cached.
      #
      # Can be a time in seconds, or -1 for no caching. Times can be
      # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
      # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as
      # 365 days).
      expires: 5m

      # Redirect any incoming request to Drupal's front controller.
      passthru: '/index.php'

      # Deny access to all static files, except those specifically allowed below.
      allow: false

      # Rules for specific URI patterns.
      rules:
        # Allow access to common static files.
        '\.(jpe?g|png|gif|svgz?|css|js|map|ico|bmp|eot|woff2?|otf|ttf)$':
          allow: true
        '^/robots\.txt$':
          allow: true
        '^/sitemap\.xml$':
          allow: true

        # Deny direct access to configuration files.
        '^/sites/sites\.php$':
          scripts: false
        '^/sites/[^/]+/settings.*?\.php$':
          scripts: false

    # The files directory has its own special configuration rules.
    '/sites/default/files':
      # Allow access to all files in the public files directory.
      allow: true
      expires: 5m
      passthru: '/index.php'
      root: 'web/sites/default/files'

      # Do not execute PHP scripts from the writeable mount.
      scripts: false

      rules:
        # Provide a longer TTL (2 weeks) for aggregated CSS and JS files.
        '^/sites/default/files/(css|js)':
          expires: 2w

crons:
  # Run Drupal's cron tasks every 19 minutes.
  drupal:
    spec: '*/20 * * * *'
    cmd: 'cd web ; drush core-cron'
